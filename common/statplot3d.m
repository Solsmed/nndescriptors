function [ dataVectorQuantiles ] = statplot3d(x, y, data)
%STATPLOT3D Summary of this function goes here
%   Detailed explanation goes here


statDim = 3;
quants = [0.25 0.5 0.75];
alphas = [0.25 0.7 0.25];%0.5 - abs(0.5 - quants);

%dataVectorMean = nanmean(data,statDim);
dataVectorQuantiles = quantile(data,quants,statDim);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SIMPLIFIED SURFACES

%{
plot3(A,E,reshape(dataVectorMedian,length(y),length(x)),'bo')
plot3([x(1) x(1) x(6) x(6) x(1)], ...
      [y(1) y(5) y(5) y(1) y(1)]*SCALE, ...
      [dataVectorMean(1) dataVectorMean(5) dataVectorMean(30) dataVectorMean(26) dataVectorMean(1);
      plotQuantiles2(1,1),plotQuantiles2(5,1),plotQuantiles2(5,6),plotQuantiles2(1,6),plotQuantiles2(1,1);
      plotQuantiles3(1,1),plotQuantiles3(5,1),plotQuantiles3(5,6),plotQuantiles3(1,6),plotQuantiles3(1,1)], ...
      'k-')
plot3([x(1) x(5) x(6)], ...
      [y(5) y(4) y(1)]*SCALE, ...
      [dataVectorMean(5) dataVectorMean(24) dataVectorMean(26);
      plotQuantiles2(5,1) plotQuantiles2(4,5) plotQuantiles2(1,6); ...
      plotQuantiles3(5,1) plotQuantiles3(4,5) plotQuantiles3(1,6)]', ...
      'k-')
plot3([x(6) x(5) x(1)], ...
      [y(5) y(4) y(1)]*SCALE, ...
      [dataVectorMean(30) dataVectorMean(24) dataVectorMean(1);
      plotQuantiles2(5,6) plotQuantiles2(4,5) plotQuantiles2(1,1); ...
      plotQuantiles3(5,6) plotQuantiles3(4,5) plotQuantiles3(1,1)]', ...
      'k-');

col = [0 0.6 1];
simpleData = plotQuantiles2;
p=patch([x(5) x(1) x(6)], ...
        [y(4) y(1) y(1)]*SCALE, ...
        [simpleData(4,5) simpleData(1,1) simpleData(1,6)], ...
        col);
set(p,'FaceAlpha',0.3);
p=patch([x(5) x(1) x(1)], ...
        [y(4) y(1) y(5)]*SCALE, ...
        [simpleData(4,5) simpleData(1,1) simpleData(5,1)], ...
        col);
set(p,'FaceAlpha',0.3);
p=patch([x(5) x(1) x(6)], ...
        [y(4) y(5) y(5)]*SCALE, ...
        [simpleData(4,5) simpleData(5,1) simpleData(5,6)], ...
        col);
set(p,'FaceAlpha',0.3);
p=patch([x(5) x(6) x(6)], ...
        [y(4) y(5) y(1)]*SCALE, ...
        [simpleData(4,5) simpleData(5,6) simpleData(1,6)], ...
        col);
set(p,'FaceAlpha',0.3);

col = [0 1 1];
simpleData = reshape(dataVectorMean,length(y),length(x));
p=patch([x(5) x(1) x(6)], ...
        [y(4) y(1) y(1)]*SCALE, ...
        [simpleData(4,5) simpleData(1,1) simpleData(1,6)], ...
        col);
set(p,'FaceAlpha',0.3);
p=patch([x(5) x(1) x(1)], ...
        [y(4) y(1) y(5)]*SCALE, ...
        [simpleData(4,5) simpleData(1,1) simpleData(5,1)], ...
        col);
set(p,'FaceAlpha',0.3);
p=patch([x(5) x(1) x(6)], ...
        [y(4) y(5) y(5)]*SCALE, ...
        [simpleData(4,5) simpleData(5,1) simpleData(5,6)], ...
        col);
set(p,'FaceAlpha',0.3);
p=patch([x(5) x(6) x(6)], ...
        [y(4) y(5) y(1)]*SCALE, ...
        [simpleData(4,5) simpleData(5,6) simpleData(1,6)], ...
        col);
set(p,'FaceAlpha',0.3);

col = [0 0.6 1];
simpleData = plotQuantiles3;
p=patch([x(5) x(1) x(6)], ...
        [y(4) y(1) y(1)]*SCALE, ...
        [simpleData(4,5) simpleData(1,1) simpleData(1,6)], ...
        col);
set(p,'FaceAlpha',0.3);
p=patch([x(5) x(1) x(1)], ...
        [y(4) y(1) y(5)]*SCALE, ...
        [simpleData(4,5) simpleData(1,1) simpleData(5,1)], ...
        col);
set(p,'FaceAlpha',0.3);
p=patch([x(5) x(1) x(6)], ...
        [y(4) y(5) y(5)]*SCALE, ...
        [simpleData(4,5) simpleData(5,1) simpleData(5,6)], ...
        col);
set(p,'FaceAlpha',0.3);
p=patch([x(5) x(6) x(6)], ...
        [y(4) y(5) y(1)]*SCALE, ...
        [simpleData(4,5) simpleData(5,6) simpleData(1,6)], ...
        col);
set(p,'FaceAlpha',0.3);
%}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% QUANTILE SURFACES

for q=1:length(quants)
    s=surf(x,y,dataVectorQuantiles(:,:,q)','edgecolor','none');
    hold on
    set(s,'FaceAlpha',alphas(q));
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% QUANTILE RODS
%{
for a=x
    for e=y
        ai=find(x==a,1);
        ei=find(y==e,1);
        plot3([a a],[e e]*SCALE,[plotQuantiles4(ei,ai) plotQuantiles1(ei,ai)],'k-','LineWidth',2)
    end
end


%plot3(A,E,reshape(dataVectorMedian,length(y),length(x)),'o')
scatter3(reshape(A,1,[]),reshape(E,1,[]),reshape(plotQuantiles1,1,[]),80,'^','MarkerEdgeColor','k','MarkerFaceColor',[0 .75 .75])
%scatter3(reshape(A,1,[]),reshape(E,1,[]),reshape(dataVectorQuantiles(2,:),1,[]),80,'^','MarkerEdgeColor','k','MarkerFaceColor',[0 .75 .75])
%scatter3(reshape(A,1,[]),reshape(E,1,[]),reshape(dataVectorQuantiles(3,:),1,[]),80,'v','MarkerEdgeColor','k','MarkerFaceColor',[0 .75 .75])
scatter3(reshape(A,1,[]),reshape(E,1,[]),reshape(plotQuantiles4,1,[]),80,'v','MarkerEdgeColor','k','MarkerFaceColor',[0 .75 .75])

%}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%{
xlabel('Angle std dev [deg]')
ylabel('Extent std dev [pixels]')
zlabel('Relative RMS error from actual field [%]')

xlim([0 10.1])
ylim([0 5.05])
zlim([0 10])

%shading interp
set(gca,'Color',[1 1 1]);
set(gcf,'Color',[1 1 1]);
axis on
%}
end

